# Generated by Django 3.0.7 on 2021-08-22 07:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(choices=[('Al', 'البرز'), ('Te', 'تهران'), ('Az_E', 'آذربایجان شرقی'), ('Az_W', 'آذربایجان غربی'), ('Ko_N', 'خراسان شمالی'), ('Ko_S', 'خراسان جنوبی'), ('Ko_C', 'خراسان مرکزی'), ('Si', 'سیستان و بلوچستان'), ('Mar', 'مرکزی'), ('Go', 'گلستان'), ('Gi', 'گیلان'), ('Ha', 'همدان'), ('Lo', 'لرستان'), ('Ku', 'خوزستان'), ('Kerman', 'کرمان'), ('Ker', 'کرمانشاه'), ('Char', 'چهارمحال و بختیاری'), ('Es', 'اصفهان'), ('Eil', 'ایلام'), ('Bu', 'بوشهر'), ('Zan', 'زنجان'), ('Sem', 'سمنان'), ('Fars', 'فارس'), ('Ghaz', 'قزوین'), ('Ghom', 'قم'), ('Koh', 'کهگیلویه و بویراحمد'), ('Maz', 'مازندران'), ('Hor', 'هرمزگان'), ('Yaz', 'یزد')], max_length=7)),
                ('Address', models.TextField(max_length=1000)),
                ('postal_code', models.CharField(max_length=20)),
                ('is_default', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'نشانی',
                'verbose_name_plural': 'نشانی ها',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user', to='users.Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'verbose_name': 'مشتری',
                'verbose_name_plural': 'مشتری ها',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
            ],
            options={
                'verbose_name': 'کارمند',
                'verbose_name_plural': 'کارمندان',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
